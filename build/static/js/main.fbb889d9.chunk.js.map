{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["calculateWinner","squares","lines","i","length","a","b","c","Square","props","className","onClick","value","Board","renderSquare","position","click","Game","React","useState","history","Array","fill","xIsNext","stepNumber","stored","setStored","status","setStatus","moves","setMoves","useEffect","current","winner","map","step","move","desc","slice","concat","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fbb889d9.chunk.js","sourcesContent":["import React from 'react';\nimport './App.css';\n\nconst calculateWinner = (squares) => {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6],\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n};\n\n\nconst Square = (props) => {\n  return (\n    <button className=\"square\" onClick={props.onClick}>\n      {props.value}\n    </button>\n  );\n}\n\nconst Board = (props) => {\n\n  const renderSquare = i => {\n    return (\n      <Square \n        value={props.position.squares[i]}\n        onClick={()=>props.click(i)}\n      />\n    );\n  };\n\n  return (\n    <div>\n      <div className=\"board-row\">\n        {renderSquare(0)}\n        {renderSquare(1)}\n        {renderSquare(2)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(3)}\n        {renderSquare(4)}\n        {renderSquare(5)}\n      </div>\n      <div className=\"board-row\">\n        {renderSquare(6)}\n        {renderSquare(7)}\n        {renderSquare(8)}\n      </div>\n    </div>\n  );\n}\n\nconst Game = () => {\n  const [stored, setStored] = React.useState(\n    {\n      history: [{squares: Array(9).fill(null)}],\n      xIsNext: true,\n      stepNumber: 0,\n    }\n  );\n\n  const [status, setStatus] = React.useState(\n    'Next player: ' + (stored.xIsNext ? 'X' : 'O')\n  );\n\n  const [moves, setMoves] = React.useState();\n\n  const handleClick = (i) => {\n    const history = stored.history.slice(0, stored.stepNumber + 1);\n    const current = history[history.length-1]\n    const squares = current.squares.slice();\n    if (calculateWinner(current.squares) || current.squares[i]) {\n      return;\n    }\n    squares[i] = stored.xIsNext ? 'X' : 'O';\n\n    setStored({\n      history: history.concat([{\n        squares: squares,\n      }]),\n      xIsNext: !stored.xIsNext,\n      stepNumber: stored.history.length,\n    });\n  };\n\n\n  React.useEffect(() => {\n      const current = stored.history[stored.stepNumber];\n      const winner = calculateWinner(current.squares);\n      if (winner) {\n        setStatus('Winner: ' + winner);\n      } else {\n        setStatus('Next player: ' + (stored.xIsNext ? 'X' : 'O'));\n      }\n      setMoves(\n        stored.history.map((step, move) => {\n          const desc = move ?\n            'Go to move #' + move :\n            'Go to game start';\n          return (\n            <li key={move}>\n              <button onClick={\n                () => setStored({\n                  history: stored.history.slice(0, move + 1),\n                  xIsNext: (move % 2) === 0,\n                  stepNumber: move})}>\n                {desc}\n              </button>\n            </li>\n          );\n        })\n      )\n    }, [stored.history, stored.stepNumber, stored.xIsNext]\n  );\n\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board \n          position={stored.history[stored.stepNumber]}\n          click={handleClick}\n        />\n      </div>\n      <div className=\"game-info\">\n        <div>{status}</div>\n        <ol>{moves}</ol>\n      </div>\n    </div>\n  );\n};\n\nexport default Game;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}